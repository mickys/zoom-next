/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Zoom4, Zoom4Interface } from "../Zoom4";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "inputData",
        type: "bytes",
      },
    ],
    name: "combine",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610517806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063124542e314610030575b600080fd5b6100e96004803603602081101561004657600080fd5b810190808035906020019064010000000081111561006357600080fd5b82018360208201111561007557600080fd5b8035906020019184600183028401116401000000008311171561009757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061023c565b60405180806020018060200180602001848103845287818151815260200191508051906020019080838360005b83811015610131578082015181840152602081019050610116565b50505050905090810190601f16801561015e5780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019080838360005b8381101561019757808201518184015260208101905061017c565b50505050905090810190601f1680156101c45780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b838110156101fd5780820151818401526020810190506101e2565b50505050905090810190601f16801561022a5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b60608060608060608060208701600381015160001a610100600283015160001a020159604052604051945060408102855260005b6002820281101561029257600060208202602088010152600181019050610270565b5059604052604051935060208102845260005b818110156102c4576000602082026020870101526001810190506102a5565b506006820191505960405260206040510192506000602084016000805b848110156104be57600286015160001a610100600188015160001a020160008052865160001a600381141561031557600093505b6007811460068214600583146004841460028514171717171561043957600488015160001a61010060038a015160001a0201600689015160001a61010060058b015160001a0201600283141561038b576040820260208e0101600160146101000a03600c8383510103511660005260088b019a50505b600583146004841417156103ec576040820260208e0101515180600585146004861417156103e35787821488831117156103d557878203905060048514156103d4576001880197505b5b818811156103e257600090505b5b8060208d015250505b600683141561041a576040820260208e010151518d6020526040830260208f0101602089035160208d015250505b6007831415610436576040820260208e010151518060208c0152505b50505b600060028214141561046457600888019750600160146101000a03600c890351166000526014880197505b6000516000806000858c856207a120fa503d6000883e3d9050866040860260208f010152806040860260408f010152838a019950808701965080880197508088036020860260208e010152505050506001810190506102e1565b50828652602082016040525050505050808288955095509550505050919390925056fea2646970667358221220ecb11958320e576e6da7cf6a986217d1b70cf5c50b6b63810a3d8c30bf05668764736f6c63430007050033";

export class Zoom4__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Zoom4> {
    return super.deploy(overrides || {}) as Promise<Zoom4>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Zoom4 {
    return super.attach(address) as Zoom4;
  }
  connect(signer: Signer): Zoom4__factory {
    return super.connect(signer) as Zoom4__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Zoom4Interface {
    return new utils.Interface(_abi) as Zoom4Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Zoom4 {
    return new Contract(address, _abi, signerOrProvider) as Zoom4;
  }
}
