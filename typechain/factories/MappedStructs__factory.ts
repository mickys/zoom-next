/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MappedStructs, MappedStructsInterface } from "../MappedStructs";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_str",
        type: "string",
      },
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_uint256",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "_uint16",
        type: "uint16",
      },
      {
        internalType: "bool",
        name: "_bool",
        type: "bool",
      },
    ],
    name: "addItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "itemCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "itemMap",
    outputs: [
      {
        internalType: "string",
        name: "_string",
        type: "string",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_uint256",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "_uint16",
        type: "uint16",
      },
      {
        internalType: "bool",
        name: "_bool",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061005b6040518060400160405280600281526020017f73310000000000000000000000000000000000000000000000000000000000008152506001806001806102b860201b60201c565b6100a66040518060400160405280600281526020017f7332000000000000000000000000000000000000000000000000000000000000815250600280600260016102b860201b60201c565b6100f16040518060400160405280600281526020017f7333000000000000000000000000000000000000000000000000000000000000815250600380600360016102b860201b60201c565b61013c6040518060400160405280600281526020017f7334000000000000000000000000000000000000000000000000000000000000815250600480600460016102b860201b60201c565b6101876040518060400160405280600281526020017f7335000000000000000000000000000000000000000000000000000000000000815250600580600560016102b860201b60201c565b6101d26040518060400160405280600281526020017f7336000000000000000000000000000000000000000000000000000000000000815250600680600660016102b860201b60201c565b61021d6040518060400160405280600281526020017f7337000000000000000000000000000000000000000000000000000000000000815250600780600760016102b860201b60201c565b6102686040518060400160405280600281526020017f7338000000000000000000000000000000000000000000000000000000000000815250600880600860016102b860201b60201c565b6102b36040518060400160405280600281526020017f7339000000000000000000000000000000000000000000000000000000000000815250600980600960016102b860201b60201c565b61042f565b600080600060016000815460010191905081905581526020019081526020016000209050858160000190805190602001906102f4929190610384565b50848160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838160020181905550828160030160006101000a81548161ffff021916908361ffff160217905550818160030160026101000a81548160ff021916908315150217905550505050505050565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826103ba5760008555610401565b82601f106103d357805160ff1916838001178555610401565b82800160010185558215610401579182015b828111156104005782518255916020019190600101906103e5565b5b50905061040e9190610412565b5090565b5b8082111561042b576000816000905550600101610413565b5090565b6104fe8061043e6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80636bfb0d0114610046578063f43638b814610064578063fee6d33114610163575b600080fd5b61004e610242565b6040518082815260200191505060405180910390f35b610161600480360360a081101561007a57600080fd5b810190808035906020019064010000000081111561009757600080fd5b8201836020820111156100a957600080fd5b803590602001918460018302840111640100000000831117156100cb57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803561ffff169060200190929190803515159060200190929190505050610248565b005b61018f6004803603602081101561017957600080fd5b8101908080359060200190929190505050610314565b60405180806020018673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018461ffff1681526020018315158152602001828103825287818151815260200191508051906020019080838360005b838110156102035780820151818401526020810190506101e8565b50505050905090810190601f1680156102305780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b60015481565b6000806000600160008154600101919050819055815260200190815260200160002090508581600001908051906020019061028492919061041d565b50848160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838160020181905550828160030160006101000a81548161ffff021916908361ffff160217905550818160030160026101000a81548160ff021916908315150217905550505050505050565b6000602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103c05780601f10610395576101008083540402835291602001916103c0565b820191906000526020600020905b8154815290600101906020018083116103a357829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900461ffff16908060030160029054906101000a900460ff16905085565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282610453576000855561049a565b82601f1061046c57805160ff191683800117855561049a565b8280016001018555821561049a579182015b8281111561049957825182559160200191906001019061047e565b5b5090506104a791906104ab565b5090565b5b808211156104c45760008160009055506001016104ac565b509056fea2646970667358221220f3482eec22477db815bb19779d26779e2a3f42c525f69ccc271960f1ddf9a5c364736f6c63430007050033";

export class MappedStructs__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MappedStructs> {
    return super.deploy(overrides || {}) as Promise<MappedStructs>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MappedStructs {
    return super.attach(address) as MappedStructs;
  }
  connect(signer: Signer): MappedStructs__factory {
    return super.connect(signer) as MappedStructs__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MappedStructsInterface {
    return new utils.Interface(_abi) as MappedStructsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MappedStructs {
    return new Contract(address, _abi, signerOrProvider) as MappedStructs;
  }
}
