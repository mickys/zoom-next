/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MappedStructs, MappedStructsInterface } from "../MappedStructs";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_str",
        type: "string",
      },
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_uint256",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "_uint16",
        type: "uint16",
      },
      {
        internalType: "bool",
        name: "_bool",
        type: "bool",
      },
    ],
    name: "addItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "addrToUintMap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
    ],
    name: "getItemAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "getItemValForAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "itemCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "itemMap",
    outputs: [
      {
        internalType: "string",
        name: "_string",
        type: "string",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_uint256",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "_uint16",
        type: "uint16",
      },
      {
        internalType: "bool",
        name: "_bool",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uintToAddrMap",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061005b6040518060400160405280600281526020017f733100000000000000000000000000000000000000000000000000000000000081525060018060018061082160201b60201c565b6100a66040518060400160405280600281526020017f73320000000000000000000000000000000000000000000000000000000000008152506002806002600161082160201b60201c565b6100f16040518060400160405280600281526020017f73330000000000000000000000000000000000000000000000000000000000008152506003806003600161082160201b60201c565b61013c6040518060400160405280600281526020017f73340000000000000000000000000000000000000000000000000000000000008152506004806004600161082160201b60201c565b6101876040518060400160405280600281526020017f73350000000000000000000000000000000000000000000000000000000000008152506005806005600161082160201b60201c565b6101d26040518060400160405280600281526020017f73360000000000000000000000000000000000000000000000000000000000008152506006806006600161082160201b60201c565b61021d6040518060400160405280600281526020017f73370000000000000000000000000000000000000000000000000000000000008152506007806007600161082160201b60201c565b6102686040518060400160405280600281526020017f73380000000000000000000000000000000000000000000000000000000000008152506008806008600161082160201b60201c565b6102b36040518060400160405280600281526020017f73390000000000000000000000000000000000000000000000000000000000008152506009806009600161082160201b60201c565b6001600260006001815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060028060006002815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003600260006003815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506004600260006004815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506005600260006005815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506006600260006006815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506007600260006007815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506008600260006008815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506009600260006009815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600b60036000600173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550601660036000600273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550602160036000600373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550602c60036000600473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550603760036000600573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550604260036000600673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550604d60036000600773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550605860036000600873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550606360036000600973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610998565b6000806000600160008154600101919050819055815260200190815260200160002090508581600001908051906020019061085d9291906108ed565b50848160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838160020181905550828160030160006101000a81548161ffff021916908361ffff160217905550818160030160026101000a81548160ff021916908315150217905550505050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282610923576000855561096a565b82601f1061093c57805160ff191683800117855561096a565b8280016001018555821561096a579182015b8281111561096957825182559160200191906001019061094e565b5b509050610977919061097b565b5090565b5b8082111561099457600081600090555060010161097c565b5090565b61077380620009a86000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063ea8b2ee71161005b578063ea8b2ee714610154578063f40b1f54146101ac578063f43638b814610204578063fee6d331146103035761007d565b806302a797801461008257806334a5acca146100de5780636bfb0d0114610136575b600080fd5b6100b26004803603602081101561009857600080fd5b81019080803561ffff1690602001909291905050506103e2565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610120600480360360208110156100f457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610423565b6040518082815260200191505060405180910390f35b61013e61043b565b6040518082815260200191505060405180910390f35b6101806004803603602081101561016a57600080fd5b8101908080359060200190929190505050610441565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101ee600480360360208110156101c257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610474565b6040518082815260200191505060405180910390f35b610301600480360360a081101561021a57600080fd5b810190808035906020019064010000000081111561023757600080fd5b82018360208201111561024957600080fd5b8035906020019184600183028401116401000000008311171561026b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803561ffff1690602001909291908035151590602001909291905050506104bd565b005b61032f6004803603602081101561031957600080fd5b8101908080359060200190929190505050610589565b60405180806020018673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018461ffff1681526020018315158152602001828103825287818151815260200191508051906020019080838360005b838110156103a3578082015181840152602081019050610388565b50505050905090810190601f1680156103d05780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b6000600260008361ffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60036020528060005260406000206000915090505481565b60015481565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080600060016000815460010191905081905581526020019081526020016000209050858160000190805190602001906104f9929190610692565b50848160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838160020181905550828160030160006101000a81548161ffff021916908361ffff160217905550818160030160026101000a81548160ff021916908315150217905550505050505050565b6000602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106355780601f1061060a57610100808354040283529160200191610635565b820191906000526020600020905b81548152906001019060200180831161061857829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900461ffff16908060030160029054906101000a900460ff16905085565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826106c8576000855561070f565b82601f106106e157805160ff191683800117855561070f565b8280016001018555821561070f579182015b8281111561070e5782518255916020019190600101906106f3565b5b50905061071c9190610720565b5090565b5b80821115610739576000816000905550600101610721565b509056fea2646970667358221220a83deb6a59dc0f14f062f7ea958b3cfcc0e952ad4a51ae430f44e9374eb8a22a64736f6c63430007050033";

export class MappedStructs__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MappedStructs> {
    return super.deploy(overrides || {}) as Promise<MappedStructs>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MappedStructs {
    return super.attach(address) as MappedStructs;
  }
  connect(signer: Signer): MappedStructs__factory {
    return super.connect(signer) as MappedStructs__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MappedStructsInterface {
    return new utils.Interface(_abi) as MappedStructsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MappedStructs {
    return new Contract(address, _abi, signerOrProvider) as MappedStructs;
  }
}
